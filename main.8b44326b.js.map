{"version":3,"sources":["scripts/main.js"],"names":["tr","document","querySelector","tbody","people","children","clone","transform","str","parseInt","split","join","addEventListener","e","sortBy","target","innerHTML","sort","a","b","first","second","forEach","person","append"],"mappings":";AAAA,aAsCC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApCD,IAAMA,EAAKC,SAASC,cAAc,MAC5BC,EAAQF,SAASC,cAAc,SAC/BE,EAAaH,EAAAA,SAASC,cAAc,SAASG,UAC7CC,EAAYF,EAAAA,GA+BlB,SAASG,EAAUC,GACVC,OAAAA,SAASD,EAAIE,MAAM,KAAKC,KAAK,IAAID,MAAM,KAAKC,KAAK,KA9B1DX,EAAGY,iBAAiB,QAAS,SAACC,GAGpBC,OAFOD,EAAEE,OAAOC,WAGjB,IAAA,OACHV,EAAMW,KAAK,SAACC,EAAGC,GACZD,OAAAA,EAAEb,SAAS,GAAGW,UAAYG,EAAEd,SAAS,GAAGW,UAAa,GAAK,IAC7D,MACG,IAAA,WACHV,EAAMW,KAAK,SAACC,EAAGC,GACZD,OAAAA,EAAEb,SAAS,GAAGW,UAAYG,EAAEd,SAAS,GAAGW,UAAa,GAAK,IAC7D,MACG,IAAA,MACHV,EAAMW,KAAK,SAACC,EAAGC,GACZD,OAAAA,EAAEb,SAAS,GAAGW,UAAYG,EAAEd,SAAS,GAAGW,UAAa,GAAK,IAC7D,MACG,IAAA,SACHV,EAAMW,KAAK,SAACC,EAAGC,GACPC,IAAAA,EAAQF,EAAEb,SAAS,GAAGW,UACtBK,EAASF,EAAEd,SAAS,GAAGW,UAEtBT,OAAAA,EAAUa,GAASb,EAAUc,KAK1Cf,EAAMgB,QAAQ,SAAAC,GAAUpB,OAAAA,EAAMqB,OAAOD","file":"main.8b44326b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tr = document.querySelector('tr');\nconst tbody = document.querySelector('tbody');\nconst people = [...document.querySelector('tbody').children];\nconst clone = [...people];\n\ntr.addEventListener('click', (e) => {\n  const sortBy = e.target.innerHTML;\n\n  switch (sortBy) {\n    case 'Name':\n      clone.sort((a, b) =>\n        (a.children[0].innerHTML > b.children[0].innerHTML) ? 1 : -1);\n      break;\n    case 'Position':\n      clone.sort((a, b) =>\n        (a.children[1].innerHTML > b.children[1].innerHTML) ? 1 : -1);\n      break;\n    case 'Age':\n      clone.sort((a, b) =>\n        (a.children[2].innerHTML > b.children[2].innerHTML) ? 1 : -1);\n      break;\n    case 'Salary':\n      clone.sort((a, b) => {\n        const first = a.children[3].innerHTML;\n        const second = b.children[3].innerHTML;\n\n        return transform(first) - transform(second);\n      });\n      break;\n  }\n\n  clone.forEach(person => tbody.append(person));\n});\n\nfunction transform(str) {\n  return parseInt(str.split('$').join('').split(',').join(''));\n}\n"]}